arr = [1, 2 ,3, 4, 5]

p "Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными."
p "[1, 2, 3, 4 ,5]"
arr.each{ |i| p i if i.even? } + arr.each{ |i| p i if i.odd? }
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными."
p "[1, 2, 3, 4 ,5]"
arr.each{ |i| p i if i.odd? } + arr.each{ |i| p i if i.even? }
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p "[1, 2, 3, 4 ,5]"
arr.index{|element| p element if arr[0] < element && element < arr[-1]} || []
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Вывести номер последнего из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p "[1, 2, 3, 4 ,5]"
arr.rindex{|element| p element if arr[0] < element && element < arr[-1]} || []
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять."
p "[1, 2, 3, 4 ,5]"
p arr.map { |e| e + arr[0] if e != arr[0] && e !=arr[-1] && e.even?}.compact
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Преобразовать его, прибавив к четным числам последний элемент. Первый и последний элементы массива не изменять."
p "[1, 2, 3, 4 ,5]"
p arr.map { |e| e + arr[-1] if e != arr[0] && e !=arr[-1] && e.even?}.compact
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять."
p "[1, 2, 3, 4 ,5]"
p arr.map { |e| e + arr[-1]  if e != arr[0] && e != arr[-1] && e.odd?}.compact
p "--------------------------------------------------------------------------------------------------------------------"
p "Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам первый элемент. Первый и последний элементы массива не изменять."
p "[1, 2, 3, 4 ,5]"
p arr.map { |e| e + arr[0]  if e != arr[0] && e != arr[-1] && e.odd?}.compact
#added ssh-key
